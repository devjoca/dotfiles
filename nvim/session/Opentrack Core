let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Code/opentrack/opentrack
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +28 serverless/tracking-api/functions/webhooks/list.js
badd +10 src/services/container-voyages/report-processing/side-effects/reactions/publish-notifications.ts
badd +357 test/services/container-voyages/report-processing/side-effects/reactions/publish-notifications.test.ts
badd +136 src/services/container-voyages/report-processing/aggregation/helpers.ts
badd +196 test/e2e/report-processing/webhook-triggering/index.test.ts
badd +33 src/services/container-voyages/actions/reports/reactions/notify-webhooks.ts
badd +177 docs/api/opentrack-api-beta.yml
badd +19 package.json
badd +0 3
badd +1 src/entities/enums/webhook-event.ts
argglobal
%argdel
edit src/services/container-voyages/report-processing/aggregation/helpers.ts
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 159 + 159) / 319)
exe 'vert 2resize ' . ((&columns * 159 + 159) / 319)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 126 - ((19 * winheight(0) + 32) / 64)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
126
normal! 0
lcd ~/Code/opentrack/opentrack
wincmd w
argglobal
if bufexists("~/Code/opentrack/opentrack/test/services/container-voyages/report-processing/side-effects/reactions/publish-notifications.test.ts") | buffer ~/Code/opentrack/opentrack/test/services/container-voyages/report-processing/side-effects/reactions/publish-notifications.test.ts | else | edit ~/Code/opentrack/opentrack/test/services/container-voyages/report-processing/side-effects/reactions/publish-notifications.test.ts | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 376 - ((33 * winheight(0) + 32) / 64)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
376
normal! 0
lcd ~/Code/opentrack/opentrack
wincmd w
exe 'vert 1resize ' . ((&columns * 159 + 159) / 319)
exe 'vert 2resize ' . ((&columns * 159 + 159) / 319)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFcI
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
